For many simple cases you can use the built in [GORM unit testing|http://grails.org/doc/latest/guide/testing.html#unitTestingDomains] provided by Grails.

For more complex cases a @grails.test.mixin.mongodb.MongoDbTestMixin@ class is provided which can run tests against a running MongoDB instance or a mock instance (such as one provided by the [Fongo|https://github.com/fakemongo/fongo] project).

Example against a running MongoDB instance:

{code}
@Entity
class Person {
    Object id
    Long version
    String name
}

...

import grails.test.mixin.mongodb.*

@TestMixin(MongoDbTestMixin)
class PersonSpec extends Specification{

    void "Test count people"() {
        given:"A mongo domain model"
            mongoDomain([Person])

        expect:"Count the number of people"
            Person.count() == 0
    }
}
{code}


Example using [Fongo|https://github.com/fakemongo/fongo]:

{code}
import com.github.fakemongo.Fongo
import grails.test.mixin.mongodb.*

@TestMixin(MongoDbTestMixin)
class PersonSpec extends Specification{

    void "Test count people"() {
        given:"A mongo domain model"
            Fongo fongo = new Fongo("mongo server 1");
            mongoDomain(fongo, [Person])

        expect:"Count the number of people"
            Person.count() == 0
    }
}
{code}

