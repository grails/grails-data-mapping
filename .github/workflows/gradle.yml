name: Java CI
on:
  push:
    branches:
      - '[7-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[7-9]+.[0-9]+.x'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['11', '14']
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          # Publish a Gradle build scan so you can see all the build logs,
          # a complete task timeline, test outputs, and the resolved dependencies of your build.
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
      - name: Run Build
        id: build
        run: ./gradlew build
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  publish:
    if: github.event_name == 'push'
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
      - name: Publish to Artifactory (repo.grails.org)
        run: ./gradlew -Dorg.gradle.internal.publish.checksums.insecure=true publish
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
  trigger-build-gorm-impls:
    if: github.event_name == 'push'
    needs: ["build", "publish"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract branch name
        id: extract_branch
        run: echo "value=${GITHUB_REF:11}" >> $GITHUB_OUTPUT
      - name: Create Snapshot Message for the Workflow Dispatch
        id: dispatch_message
        run: echo "value={\"message\":\"New Core Snapshot $(date) - $GITHUB_SHA\"}" >> $GITHUB_OUTPUT
      - name: Invoke the Java CI workflow in GORM Hibernate5
        uses: benc-uk/workflow-dispatch@v1.2
        with:
          workflow: Java CI
          repo: grails/gorm-hibernate5
          ref: ${{ steps.extract_branch.outputs.value }}
          token: ${{ secrets.GH_TOKEN }}
      - name: Invoke the Java CI workflow in GORM MongoDB
        uses: benc-uk/workflow-dispatch@v1.2
        with:
          workflow: Java CI
          repo: grails/gorm-mongodb
          ref: ${{ steps.extract_branch.outputs.value }}
          token: ${{ secrets.GH_TOKEN }}
          inputs: ${{ steps.dispatch_message.outputs.value }}
      - name: Invoke the Java CI workflow in GORM Neo4j
        uses: benc-uk/workflow-dispatch@v1.2
        with:
          workflow: Java CI
          repo: grails/gorm-neo4j
          ref: ${{ steps.extract_branch.outputs.value }}
          token: ${{ secrets.GH_TOKEN }}